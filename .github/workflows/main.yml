name: Flutter Build and Upload Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: microsoft

      - name: Install yq
        uses: mikefarah/yq@v4.42.1

      - name: Get pubspec version
        id: get_flutter_app_version
        run: |
          VERSION=$(yq e .version pubspec.yaml | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if git tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.TAG_VERSION }}" >/dev/null 2>&1; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Create git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git tag "v${{ env.TAG_VERSION }}"
          git push origin "v${{ env.TAG_VERSION }}"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'main'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK Release
        run: flutter build apk --release

      - name: Build an AppBundle
        run: flutter build appbundle --release

      - name: Save APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-appbundle
          path: build/app/outputs/bundle/release/*.aab

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*.aab,build/app/outputs/flutter-apk/*.apk"
          tag: "v${{ env.TAG_VERSION }}"
          # token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
        if: steps.check_tag.outputs.exists == 'false'


