name: Flutter Build and Upload Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: microsoft

      - name: Install yq
        uses: mikefarah/yq@v4.42.1

      - name: Get pubspec version and check git tag
        id: get_flutter_app_version_and_check_tag
        run: |
          VERSION=$(yq e .version pubspec.yaml | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "ORIGINAL_TAG_VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_VERSION=$VERSION" >> $GITHUB_ENV
          if git rev-parse "v${{ env.TAG_VERSION }}" >/dev/null 2>&1; then
            # Extract major, minor, and patch versions
            IFS='.' read -ra ADDR <<< "${{ env.TAG_VERSION }}"
            PATCH_VERSION=$((ADDR[2]+1))  # Increment patch version
            NEW_VERSION="${ADDR[0]}.${ADDR[1]}.$PATCH_VERSION"
            echo "TAG_VERSION=$NEW_VERSION" >> $GITHUB_ENV
            echo "::set-output name=tag_updated::true"
            echo "Updated tag version to v$NEW_VERSION because v${{ env.TAG_VERSION }} already exists."
          else
            echo "::set-output name=tag_updated::false"
            echo "Tag v${{ env.TAG_VERSION }} does not exist. Proceeding with original version."

      - name: Create and push new git tag
        if: steps.get_flutter_app_version_and_check_tag.outputs.tag_updated == 'true'
        run: |
          git tag "v${{ env.TAG_VERSION }}"
          git push origin "v${{ env.TAG_VERSION }}"
          echo "New tag v${{ env.TAG_VERSION }} created and pushed."

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'main'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK Release
        run: flutter build apk --release

      - name: Build an AppBundle
        run: flutter build appbundle --release

      - name: Save APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-appbundle
          path: build/app/outputs/bundle/release/*.aab

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*.aab,build/app/outputs/flutter-apk/*.apk"
          tag: "v${{ env.TAG_VERSION }}"
          if: steps.get_flutter_app_version_and_check_tag.outputs.tag_updated == 'false'
